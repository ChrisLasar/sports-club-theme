# GitHub Actions Workflow: Cleanup Preview
# Purpose: Remove preview deployment when branch is deleted
# Trigger: Branch deletion
# Target: Removes /preview/{branch-name}/ directory

name: Cleanup Preview

on:
  delete:

permissions:
  contents: write

jobs:
  cleanup:
    name: Remove Preview Deployment
    runs-on: ubuntu-latest
    
    # Only run for branch deletions (not tag deletions)
    if: github.event.ref_type == 'branch'
    
    steps:
      - name: Sanitize branch name
        id: sanitize
        run: |
          # Convert branch name to URL-safe format (same as deploy-preview.yml)
          BRANCH="${{ github.event.ref }}"
          SANITIZED=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          echo "branch=$SANITIZED" >> $GITHUB_OUTPUT
          echo "Cleaning up preview: preview/$SANITIZED"
          
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          
      - name: Remove Preview Directory
        run: |
          PREVIEW_DIR="preview/${{ steps.sanitize.outputs.branch }}"
          
          if [ -d "$PREVIEW_DIR" ]; then
            echo "Removing $PREVIEW_DIR"
            rm -rf "$PREVIEW_DIR"
            
            # Git config
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            # Commit removal
            git add -A
            git commit -m "Remove preview: ${{ github.event.ref }} (branch deleted)" || echo "Nothing to remove"
            git push origin gh-pages
          else
            echo "Preview directory not found: $PREVIEW_DIR"
            echo "Nothing to clean up"
          fi
          
      - name: Regenerate Preview Index
        run: |
          # Ensure preview directory exists
          if [ ! -d "preview" ]; then
            echo "No preview directory, skipping index regeneration"
            exit 0
          fi
          
          # Generate preview list JSON
          PREVIEWS=""
          COUNT=0
          
          for dir in preview/*/; do
            if [ -d "$dir" ] && [ -f "$dir/.preview-meta.json" ]; then
              META=$(cat "$dir/.preview-meta.json")
              BRANCH_NAME=$(basename "$dir")
              
              # Add URL to metadata
              PREVIEW_WITH_URL=$(echo "$META" | jq --arg url "/preview/$BRANCH_NAME/" '. + {url: $url}')
              
              if [ -z "$PREVIEWS" ]; then
                PREVIEWS="$PREVIEW_WITH_URL"
              else
                PREVIEWS="$PREVIEWS,$PREVIEW_WITH_URL"
              fi
              COUNT=$((COUNT + 1))
            fi
          done
          
          # Write updated preview list
          echo "{\"generated_at\":\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",\"total_previews\":$COUNT,\"previews\":[$PREVIEWS]}" > preview/.preview-list.json
          
          # Generate HTML index (same structure as other workflows)
          cat > preview/index.html <<'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Preview Deployments</title>
    <style>
        body { font-family: system-ui; max-width: 1200px; margin: 2rem auto; padding: 0 1rem; }
        h1 { color: #333; }
        .preview-list { display: grid; gap: 1rem; }
        .preview-card { border: 1px solid #ddd; border-radius: 8px; padding: 1rem; }
        .preview-card.success { border-left: 4px solid #22c55e; }
        .preview-card.error { border-left: 4px solid #ef4444; }
        .preview-header { display: flex; justify-content: space-between; align-items: start; }
        .branch-name { font-size: 1.25rem; font-weight: 600; }
        .status { padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.875rem; }
        .status.success { background: #dcfce7; color: #166534; }
        .status.error { background: #fee2e2; color: #991b1b; }
        .commit-info { color: #666; font-size: 0.875rem; margin-top: 0.5rem; }
        .actions { margin-top: 1rem; display: flex; gap: 0.5rem; }
        .btn { padding: 0.5rem 1rem; text-decoration: none; border-radius: 4px; font-size: 0.875rem; }
        .btn-primary { background: #3b82f6; color: white; }
        .btn-secondary { background: #e5e7eb; color: #374151; }
    </style>
</head>
<body>
    <h1>ðŸš€ Preview Deployments</h1>
    <p>Active preview deployments for feature branches</p>
    <div class="preview-list" id="previews">Loading...</div>
    
    <script>
        fetch('.preview-list.json')
            .then(r => r.json())
            .then(data => {
                const container = document.getElementById('previews');
                if (data.total_previews === 0) {
                    container.innerHTML = '<p>No active previews</p>';
                    return;
                }
                
                container.innerHTML = data.previews
                    .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))
                    .map(p => `
                        <div class="preview-card ${p.build_status}">
                            <div class="preview-header">
                                <div class="branch-name">${p.branch}</div>
                                <span class="status ${p.build_status}">${p.build_status}</span>
                            </div>
                            <div class="commit-info">
                                <div>${p.commit_message}</div>
                                <div>by ${p.commit_author} â€¢ ${new Date(p.timestamp).toLocaleString()}</div>
                            </div>
                            <div class="actions">
                                ${p.build_status === 'success' 
                                    ? `<a href="${p.url}" class="btn btn-primary">View Preview</a>`
                                    : `<a href="${p.url}error.html" class="btn btn-secondary">View Error</a>`
                                }
                                <a href="https://github.com/REPO_PLACEHOLDER/commit/${p.commit}" class="btn btn-secondary">View Commit</a>
                            </div>
                        </div>
                    `).join('');
            })
            .catch(err => {
                document.getElementById('previews').innerHTML = '<p>Error loading previews</p>';
            });
    </script>
</body>
</html>
EOF
          
          # Replace placeholder
          sed -i "s|REPO_PLACEHOLDER|${{ github.repository }}|g" preview/index.html
          
          # Commit index updates
          git add preview/
          git commit -m "Update preview index after removing ${{ github.event.ref }}" || echo "No changes"
          git push origin gh-pages
          
      - name: Summary
        run: |
          echo "ðŸ§¹ Preview cleanup complete"
          echo "ðŸ“¦ Removed branch: ${{ github.event.ref }}"
          echo "ðŸ“‚ Removed directory: preview/${{ steps.sanitize.outputs.branch }}"
